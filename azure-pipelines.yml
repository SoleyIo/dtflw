trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: 3.8.*
    addToPath: true

# Version check
# TODO: check if version in setup.py and CHANGES.md have been updated.

# Install dependencies

- script: |
    python --version
    pip install .
    pip install coverage
  displayName: 'Install dependencies'
  
# Test

- script: |
    coverage run -m unittest discover && coverage xml
  displayName: 'Test'

# Publish test coverage

- task: PublishCodeCoverageResults@1
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: 'coverage.xml'
    failIfCoverageEmpty: true

# Package

- script: |
    pip install wheel
    python setup.py sdist bdist_wheel
    cp CHANGES.md dist/
    cp README.md dist/
    ls dist
  displayName: 'Package to a *.whl'

# Publish
- task: CopyFiles@2
  inputs:
    contents: 'dist/**'
    targetFolder: $(Build.ArtifactStagingDirectory)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'dtflwBuildOutputs'
    publishLocation: 'Container'